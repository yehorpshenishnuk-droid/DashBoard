import os
import time
import requests
import sys
from datetime import date, datetime
from flask import Flask, render_template_string, jsonify

app = Flask(__name__)

POSTER_TOKEN = os.getenv("POSTER_TOKEN")
ACCOUNT_NAME = "poka-net3"

# ======================
# –ì–∞—Ä—è—á–∏–π —Ü–µ—Ö
# ======================
HOT_DISHES = {
    14: "–ß–µ–±—É—Ä–µ–∫ –∑ –º–æ—Ü–∞—Ä–µ–ª–æ—é —Ç–∞ —Å—É–ª—É–≥—É–Ω—ñ",
    8: "–ß–µ–±—É—Ä–µ–∫ –∑ —Ç–µ–ª—è—Ç–∏–Ω–æ—é",
    243: "–ß–µ–±—É—Ä–µ–∫ –∑ —Ç–æ–º–∞—Ç–∞–º–∏ —Ç–∞ –≥—Ä–∏–±–∞–º–∏",
    327: "–ß–µ–±—É—Ä–µ–∫ –∑ –≤–∏—à–Ω–µ—é —Ç–∞ –≤–µ—Ä—à–∫–æ–≤–∏–º –∫—Ä–µ–º —Å–∏—Ä–æ–º",
    347: "–ß–µ–±—É—Ä–µ–∫ –∑ –±–∞—Ä–∞–Ω–Ω–∏–Ω–æ—é",
    12: "–ß–µ–±—É—Ä–µ–∫ –∑ —Å–≤–∏–Ω–∏–Ω–æ—é",
    13: "–ß–µ–±—É—Ä–µ–∫ –∑ –∫—É—Ä–∫–æ—é",
    515: "–¢–µ–ª—è—á—ñ —â—ñ—á–∫–∏ –∑ –∫–∞—Ä—Ç–æ–ø–ª—è–Ω–∏–º –ø—é—Ä–µ, 330 –≥",
    244: "–Ø–Ω—Ç–∏–∫ –∑ —Ç–æ–º–∞—Ç–∞–º–∏ —Ç–∞ –≥—Ä–∏–±–∞–º–∏",
    502: "–Ø–Ω—Ç–∏–∫ –∑ —Ñ–µ—Ä–º–µ—Ä—Å—å–∫–∏–º —Å–∏—Ä–æ–º —ñ –∑–µ–ª–µ–Ω–Ω—é",
    349: "–Ø–Ω—Ç–∏–∫ –∑ –±–∞—Ä–∞–Ω–∏–Ω–æ—é",
    74: "–Ø–Ω—Ç–∏–∫ –∑ —Å–≤–∏–Ω–∏–Ω–æ—é",
    73: "–Ø–Ω—Ç–∏–∫ –∑ –∫—É—Ä–∫–æ—é",
    75: "–Ø–Ω—Ç–∏–∫ –∑ –º–æ—Ü–∞—Ä–µ–ª–æ—é —Ç–∞ —Å—É–ª—É–≥—É–Ω—ñ",
    76: "–Ø–Ω—Ç–∏–∫ –∑ —Ç–µ–ª—è—Ç–∏–Ω–æ—é",
    375: "–Ø–Ω—Ç–∏–∫ –∑ —Ç–µ–ª—è—Ç–∏–Ω–æ—é —Ç–∞ —Å–∏—Ä–æ–º —á–µ–¥–µ—Ä",
    154: "–ü–ª–æ–≤ —è–∫–∏–π –í–∏ –ø–æ–ª—é–±–∏—Ç–µ",
    210: "–ü—ñ–¥–µ –∑ —Ç–µ–ª—è—Ç–∏–Ω–æ—é",
    545: "–ü—ñ–¥–µ –∑ –º–æ—Ü–∞—Ä–µ–ª–æ—é, —Ç–æ–º–∞—Ç–∞–º–∏ —Ç–∞ –ø–µ—Å—Ç–æ",
    290: "–õ—é–ª—è-–∫–µ–±–∞–± –∑ —Ç—Ä—å–æ–º–∞ –≤–∏–¥–∞–º–∏ –º'—è—Å–∞",
    528: "–ù—ñ–∂–Ω–µ –∫—É—Ä—è—á–µ —Å—Ç–µ–≥–Ω–æ –≥—Ä–∏–ª—å, 360 –≥",
    296: "–ú'—è—Å–Ω–∏–π —Å–µ—Ç 1,770",
    325: "–õ—é–ª—è-–∫–µ–±–∞–± –∑ —Å–∏—Ä–æ–º —Ç–∞ —Ç—Ä—å–æ–º–∞ –≤–∏–¥–∞–º–∏ –º'—è—Å–∞",
    295: "–†–µ–±–µ—Ä—Ü—è –≤ –º–µ–¥–æ–≤–æ-–≥—ñ—Ä—á–∏—á–Ω–æ–º—É —Å–æ—É—Å—ñ",
    222: "–¢–µ–ª—è—Ç–∏–Ω–∞ –Ω–∞ –≥—Ä–∏–ª—ñ",
    72: "–§—ñ–ª–µ –º–æ–ª–æ–¥–æ—ó –∫—É—Ä–∫–∏",
    71: "–®–∏–π–Ω–∞ —á–∞—Å—Ç–∏–Ω–∞ —Å–≤–∏–Ω–∏–Ω–∏",
    209: "–ü—ñ–¥–µ –∑ –∫—É—Ä–∫–æ—é —Ç–∞ —Ç–æ–º–∞—Ç–∞–º–∏",
    360: "–°–∏—Ä–Ω–µ –ø—ñ–¥–µ –∑ —ñ–Ω–∂–∏—Ä–æ–º —Ç–∞ —Ñ—ñ—Å—Ç–∞—à–∫–æ—é",
    208: "–ü—ñ–¥–µ –∑ —Å–∏—Ä–æ–º —Ç–∞ —á–∞—Å–Ω–∏–∫–æ–≤–∏–º —Å–æ—É—Å–æ–º",
}

# ======================
# –•–æ–ª–æ–¥–Ω–∏–π —Ü–µ—Ö
# ======================
COLD_DISHES = {
    493: "–ü–µ–ª—å–º–µ–Ω—ñ –∑ —Ñ—ñ–ª–µ –º–æ–ª–æ–¥–æ—ó –∫—É—Ä–∫–∏, 500 –≥",
    495: "–ü–µ–ª—å–º–µ–Ω—ñ —è–∫ –º–∞—é—Ç—å –±—É—Ç–∏ –∑ —Ç–µ–ª—è—Ç–∏–Ω–æ—é, 500 –≥",
    510: "–ü–µ–ª—å–º–µ–Ω—ñ —Å–≤–∏–Ω–æ-—è–ª–æ–≤–∏—á—ñ , 500–≥",
    399: "–°–∞–ª–∞—Ç –∑ –∑–∞–ø–µ—á–µ–Ω–∏–º–∏ –æ–≤–æ—á–∞–º–∏",
    487: "–°–∞–ª–∞—Ç –∑ —Ö–∞–º–æ–Ω–æ–º —Ç–∞ –∫–∞—Ä–∞–º–µ–ª—ñ–∑–æ–≤–∞–Ω–æ—é –≥—Ä—É—à–µ—é",
    219: "–¢–µ–ø–ª–∏–π —Å–∞–ª–∞—Ç –∑ —Ç–µ–ª—è—Ç–∏–Ω–æ—é",
    55: "–°–∞–ª–∞—Ç —Ü–µ–∑–∞—Ä—å",
    40: "–ì—Ä–µ—Ü—å–∫–∏–π —Å–∞–ª–∞—Ç",
    234: "–ü—ñ—Å–Ω–∏–π –æ–≤–æ—á–µ–≤–∏–π –∑ –≥–æ—Ä—ñ—Ö–æ–≤–æ—é –∑–∞–ø—Ä–∞–≤–∫–æ—é",
    53: "–û–≤–æ—á–µ–≤–∏–π —Å–∞–ª–∞—Ç –∑ –≥–æ—Ä—ñ—Ö–æ–≤–æ—é –∑–∞–ø—Ä–∞–≤–∫–æ—é",
    273: "–õ–µ–≥–∫–∏–π —Å–∞–ª–∞—Ç –∑ –∑–∞–ø–µ—á–µ–Ω–∏–º –≥–∞—Ä–±—É–∑–æ–º",
    438: "–ú—ñ–∫—Å —Å–∞–ª–∞—Ç—É –∑ –∫—É—Ä–∫–æ—é —Å—É–≤—ñ–¥",
    288: "–ö—Ä–µ–º-—Å—É–ø –≥–∞—Ä–±—É–∑–æ–≤–∏–π –∑ –±–µ–∫–æ–Ω–æ–º",
    262: "–ö—Ä–µ–º-—Å—É–ø –≥—Ä–∏–±–Ω–∏–π –∑ –≥—Ä—ñ–Ω–∫–∞–º–∏",
    37: "–°—É–ø –í—É—à–∫–∞",
    42: "–ú'—è—Å–Ω–∞ —Å–æ–ª—è–Ω–∫–∞",
    206: "–û–∫—Ä–æ—à–∫–∞ –Ω–∞ –∞–π—Ä–∞–Ω—ñ –∑ –∫–æ–≤–±–∞—Å–æ—é",
    384: "–û–∫—Ä–æ—à–∫–∞ –Ω–∞ –∞–π—Ä–∞–Ω—ñ –∑ —è–∑–∏–∫–æ–º —Ç–µ–ª—è—á–∏–º, 300 –≥",
    44: "–ú–∞–Ω—Ç–∏ –∑ —è–ª–æ–≤–∏—á–∏–Ω–æ—é (–∫–ª–∞—Å–∏—á–Ω—ñ)",
    521: "–ü–µ–ª—å–º–µ–Ω—ñ –∑ —Ñ—ñ–ª–µ –∫—É—Ä–∫–∏",
    429: "–ú–∞–Ω—Ç–∏ –∑ —Å–∏—Ä–æ–º —Ç–∞ –∑–µ–ª–µ–Ω—å—é",
    9: "–ú–∞–Ω—Ç–∏ –∑ —è–ª–æ–≤–∏—á–∏–Ω–æ—é —Ç–∞ —Å–≤–∏–Ω–∏–Ω–æ—é",
    497: "–ü–µ–ª—å–º–µ–Ω—ñ —è–∫ –º–∞—é—Ç—å –±—É—Ç–∏ –∑ —Ç–µ–ª—è—Ç–∏–Ω–æ—é",
    51: "–î–µ—Ä—É–Ω–∏ –∑ –≤–µ—Ä—à–∫–æ–≤–∏–º —Å–æ—É—Å–æ–º —Ç–∞ –≥—Ä–∏–±–∞–º–∏",
    49: "–î–µ—Ä—É–Ω–∏ –∑—ñ —Å–º–µ—Ç–∞–Ω–æ—é",
    252: "–ö–∞—Ä—Ç–æ–ø–ª—è –ø–æ-—Å–µ–ª—è–Ω—Å—å–∫–∏ –∑ –≥—Ä–∏–±–∞–º–∏",
    503: "–ö–∞—Ä—Ç–æ–ø–ª—è —Å–µ–ª—è–Ω–∫–∞",
    229: "–ñ—É–ª—å—î–Ω",
    387: "–ë–∞–¥—Ä–∏–¥–∂–∞–Ω–∏ –∑ –∫—Ä–µ–º —Å–∏—Ä–æ–º —Ç–∞ –≤–æ–ª–æ—Å—å–∫–∏–º –≥–æ—Ä—ñ—Ö–æ–º",
    363: "–°—Ç—Ä—ñ–ø—Å–∏ –∑ —Ñ—ñ–ª–µ –º–æ–ª–æ–¥–æ—ó –∫—É—Ä–∫–∏",
    397: "–û–ª–∏–≤–∫–æ–≤–∏–π –º—ñ–∫—Å",
    68: "–ö–∞—Ä—Ç–æ–ø–ª—è –§—Ä—ñ –∑ —Å–æ—É—Å–∞–º–∏",
    67: "–°–∏—Ä–Ω–∞ —Ç–∞—Ä—ñ–ª–∫–∞",
    69: "–°–∏—Ä–Ω—ñ —Ö—Ä—É—Å—Ç–∫—ñ –ø–∞–ª–∏—á–∫–∏",
    403: "–ë–∞—Ç–∞—Ç —Ñ—Ä—ñ –∑ —Å–æ—É—Å–æ–º —Ü–µ–∑–∞—Ä —Ç–∞ –ø–∞—Ä–º–µ–∑–∞–Ω–æ–º",
    63: "–ú–ª–∏–Ω—Ü—ñ —Å–æ–ª–æ–¥–∫—ñ –∑ –≤–∞–Ω—ñ–ª—å–Ω–∏–º —Å–∏—Ä–æ–º",
    61: "–ú–ª–∏–Ω—Ü—ñ —Å –∫—É—Ä–∫–æ—é —Ç–∞ –≥—Ä–∏–±–∞–º–∏",
    66: "–ú–ª–∏–Ω—Ü—ñ —Å –∫—É—Ä–∫–æ—é",
    47: "–°–∏—Ä–Ω–∏–∫–∏",
    57: "–°–∏—Ä–Ω—ñ —Å–æ–ª–æ–¥–∫—ñ –∫—É–ª—å–∫–∏",
    64: "–ú–ª–∏–Ω—Ü—ñ –∞–∂—É—Ä–Ω—ñ –±–µ–∑ –Ω–∞—á–∏–Ω–∫–∏",
    353: "–ö–ª–∞—Å–∏–∫–∞",
    540: "–í–∞—Ñ–µ–ª—å–Ω–∏–π –¥–µ—Å–µ—Ä—Ç –∑ –Ω–∞—Ç—è–∫–æ–º –Ω–∞ —Ä–∞—Ñ–∞–µ–ª–æ, 115 –≥",
    214: "–®–æ–∫–æ–ª–∞–¥–Ω–∏–π —Ñ–æ–Ω–¥–∞–Ω",
    331: "–ß–∏–∑–∫–µ–π–∫ LA",
    401: "–ù—ñ–∂–Ω–µ –∫—Ä–µ–º-–±—Ä—é–ª–µ",
    276: "–°–Ω—ñ–¥–∞–Ω–æ–∫ '–°—É–±–º–∞—Ä–∏–Ω–∞'",
    440: "–°–Ω—ñ–¥–∞–Ω–æ–∫ '–®–∞–∫—à—É–∫–∞'",
    444: "–°–Ω—ñ–¥–∞–Ω–æ–∫ '–Ø–∫ –≤–¥–æ–º–∞'",
    275: "–°–Ω—ñ–¥–∞–Ω–æ–∫ '–ë—é—Ä–≥–µ—Ä'",
    274: "–°–Ω—ñ–¥–∞–Ω–æ–∫ '–§—Ä—ñ—Ç–∞—Ç–∞'",
}

last_update = 0
cache = {"hot": {}, "cold": {}}


def fetch_sales(dishes_dict):
    """–ü–æ–ª—É—á–∞–µ–º –ø—Ä–æ–¥–∞–∂–∏ –∏–∑ Poster API –∑–∞ —Ç–µ–∫—É—â–∏–π –¥–µ–Ω—å –¥–ª—è –∑–∞–¥–∞–Ω–Ω–æ–≥–æ —Ü–µ—Ö–∞"""
    today = date.today().strftime("%Y-%m-%d")
    url = (
        f"https://{ACCOUNT_NAME}.joinposter.com/api/dash.getProductsSales"
        f"?token={POSTER_TOKEN}&date_from={today}&date_to={today}"
    )

    resp = requests.get(url)
    print("DEBUG Poster API response:", resp.text[:200], file=sys.stderr, flush=True)

    try:
        data = resp.json().get("response", [])
    except Exception as e:
        print("ERROR parsing JSON:", e, file=sys.stderr, flush=True)
        return {"total": 0, "top3": [("–ü–æ–º–∏–ª–∫–∞", 0)]}

    sales_count = {}
    total_orders = 0

    for item in data:
        try:
            product_id = int(item.get("product_id", 0))
            quantity = int(float(item.get("count", 0)))
        except Exception:
            continue

        if product_id in dishes_dict:
            sales_count[product_id] = sales_count.get(product_id, 0) + quantity
            total_orders += quantity

    top3 = sorted(sales_count.items(), key=lambda x: x[1], reverse=True)[:3]

    return {
        "total": total_orders,
        "top3": [(dishes_dict[i], c) for i, c in top3]
    }


@app.route("/api/hot")
def api_hot():
    global last_update, cache
    if time.time() - last_update > 30:
        cache["hot"] = fetch_sales(HOT_DISHES)
    return jsonify(cache["hot"])


@app.route("/api/cold")
def api_cold():
    global last_update, cache
    if time.time() - last_update > 30:
        cache["cold"] = fetch_sales(COLD_DISHES)
        last_update = time.time()
    return jsonify(cache["cold"])


@app.route("/")
def index():
    template = """
    <html>
    <head>
        <style>
            body { font-family: Arial, sans-serif; background: #111; color: #eee; text-align: center; }
            h2 { font-size: 40px; margin-bottom: 20px; }
            .grid { display: flex; justify-content: center; gap: 50px; max-width: 1400px; margin: auto; }
            .block { width: 650px; padding: 30px; border-radius: 15px; box-shadow: 0 0 20px rgba(0,0,0,0.7); animation: fadeIn 1s; }
            .hot { border: 4px solid #ff6600; }
            .cold { border: 4px solid #0099ff; }
            .item { font-size: 28px; margin: 8px 0; }
            .total { margin-top: 40px; font-size: 34px; font-weight: bold; }
            .updated { margin-top: 10px; font-size: 18px; color: #aaa; }
            @keyframes fadeIn { from {opacity: 0;} to {opacity: 1;} }
        </style>
    </head>
    <body>
        <div class="grid">
            <div class="block hot">
                <h2>üî• –ì–∞—Ä—è—á–∏–π –¶–ï–•</h2>
                <p id="hot_total" style="font-size:32px; font-weight:bold;">–í—Å—å–æ–≥–æ: ...</p>
                <div id="hot_top3">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
            </div>
            <div class="block cold">
                <h2>‚ùÑÔ∏è –•–æ–ª–æ–¥–Ω–∏–π –¶–ï–•</h2>
                <p id="cold_total" style="font-size:32px; font-weight:bold;">–í—Å—å–æ–≥–æ: ...</p>
                <div id="cold_top3">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
            </div>
        </div>
        <div class="total" id="all_total">–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω—å: ...</div>
        <div class="updated" id="updated_time">–û–Ω–æ–≤–ª–µ–Ω–æ: ...</div>

        <script>
        function medal(index) {
            if (index === 0) return "ü•á";
            if (index === 1) return "ü•à";
            if (index === 2) return "ü•â";
            return "";
        }

        async function updateData() {
            try {
                const hotRes = await fetch('/api/hot');
                const hot = await hotRes.json();
                document.getElementById('hot_total').innerText = "–í—Å—å–æ–≥–æ: " + hot.total + " –∑–∞–º–æ–≤–ª–µ–Ω—å";
                let hotDiv = document.getElementById('hot_top3');
                hotDiv.innerHTML = "üèÜ –¢–û–ü-3 –ø—Ä–æ–¥–∞–∂—ñ:";
                hot.top3.forEach((item, index) => {
                    hotDiv.innerHTML += `<div class="item">${medal(index)} ${item[0]} ‚Äî ${item[1]}</div>`;
                });

                const coldRes = await fetch('/api/cold');
                const cold = await coldRes.json();
                document.getElementById('cold_total').innerText = "–í—Å—å–æ–≥–æ: " + cold.total + " –∑–∞–º–æ–≤–ª–µ–Ω—å";
                let coldDiv = document.getElementById('cold_top3');
                coldDiv.innerHTML = "üèÜ –¢–û–ü-3 –ø—Ä–æ–¥–∞–∂—ñ:";
                cold.top3.forEach((item, index) => {
                    coldDiv.innerHTML += `<div class="item">${medal(index)} ${item[0]} ‚Äî ${item[1]}</div>`;
                });

                // –û–±—â–∞—è —Å—É–º–º–∞
                const all = hot.total + cold.total;
                const totalDiv = document.getElementById('all_total');
                totalDiv.innerText = "–ó–∞–≥–∞–ª—å–Ω–∞ –∫—ñ–ª—å–∫—ñ—Å—Ç—å –∑–∞–º–æ–≤–ª–µ–Ω—å: " + all;
                totalDiv.style.color = all > 100 ? "lime" : (all > 50 ? "yellow" : "red");

                // –í—Ä–µ–º—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
                const now = new Date();
                document.getElementById('updated_time').innerText = "–û–Ω–æ–≤–ª–µ–Ω–æ: " + now.toLocaleTimeString();
            } catch (e) {
                console.error("–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è:", e);
            }
        }

        setInterval(updateData, 30000);
        window.onload = updateData;
        </script>
    </body>
    </html>
    """
    return render_template_string(template)


if __name__ == "__main__":
    app.run(host="0.0.0.0", port=5000)
